 namespace = ark_game_start

# 部分初始设定
country_event = { #选择苦难摇篮起源
	id = ark_game_start.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_ark_tragedy_birth
	}

	immediate = {
		random_system = {
			limit = {
				distance = {
					source = root.capital_scope.solar_system
					min_distance >= 200
					use_bypasses = no
					min_jumps = 8
				}
				any_neighbor_system = {
					exists = owner
					owner = {
						NAND = {
							is_country_type = fallen_empire
							is_country_type = marauder_raiders
							has_civic = civic_fanatic_purifiers
							has_civic = civic_hive_devouring_swarm
							has_civic = civic_machine_terminator
						}
					}
					any_neighbor_system = {
						exists = owner
						owner = {
							NAND = {
								is_country_type = fallen_empire
								is_country_type = marauder_raiders
								has_civic = civic_fanatic_purifiers
								has_civic = civic_hive_devouring_swarm
								has_civic = civic_machine_terminator
								has_civic = civic_machine_assimilator
							}
						}
					}
				}
			}
			spawn_system = {
				min_distance = 10
				max_distance = 20
				max_jumps = 1
				min_jumps = 1
				initializer = "Chaos_system"
				hyperlane = yes
			}
		}
		#create_ship_design = { design = "NAME_ark_starbase_arclight" }
		#add_ship_design = last_created_design
		#solar_system = {

			#spawn_system = {
			#	min_distance = 100
			#	max_distance = 200
			#	max_jumps = 16
			#	min_jumps = 8
			#	initializer = "Chaos_system"
			#	hyperlane = yes
			#}
			#spawn_megastructure = {
			#	type = ark_ground_star_gate
			#	planet = event_target:ark_planet_talos
			#}
		#}
		if = {
			limit = {
				NOT = {exists = event_target:ARK_TYRA_CHAOS_SYSTEM}
			}
			country_event = {
				id = ark_game_start.100
			}
		}
		event_target:ARK_TYRA_CHAOS_SYSTEM = {
			set_surveyed = { surveyed = yes	}
			create_starbase = {
				owner = root
				size = starbase_starport
			}
			starbase = {
				set_starbase_module = {
					slot = 1
					module = shipyard
				}
				set_starbase_module = {
					slot = 2
					module = manufacturing_station
				}
			}
		}
		#event_target:ARK_TYRA_HOME_SYSTEM = {
			#spawn_megastructure = {
			#	type = ark_ground_star_gate
			#	planet = event_target:ark_planet_terra
			#}
			#set_surveyed = { surveyed = yes	}
			#star = {
			#	create_starbase = {
			#		size = starbase_ark_arclight
			#		owner = root
			#	}
			#}
		#}
		event_target:ark_planet_terra = {
			#set_owner = root
			#while = {
			#	count = 32
			#	create_pop = { species = root }
			#}
			leader = {
				add_trait_no_notify = leader_trait_righteous
				save_event_target_as = ark_start_official
			}
		}
		event_target:ark_planet_talos = {
			set_owner = root
			remove_all_buildings = yes
			set_colony_type = col_industrial
			add_building = building_capital
			remove_all_districts = yes
			add_district = district_mining
			add_district = district_generator
			create_pop_group = {
				species = root
				size = 800
			}
			set_planet_entity = {
				entity = ark_desert_planet_Talos_II
			}
		}
		event_target:ark_planet_terra = {
			clear_deposits = yes
			#remove_all_districts = yes
			assign_leader = event_target:ark_start_official
			generate_terra_deposits_and_blockers = yes	# 初始地块
			#arknight_start_districts = yes	# 初始区划
			#while = {
			#	count = 2
			#	add_district = district_city
			#}
			#while = {
			#	count = 3
			#	add_district = district_mining
			#}
			#while = {
			#	count = 2
			#	add_district = district_farming
			#}
			#add_building = building_capital
			add_modifier = { modifier = "barbarian_growth" days = -1 }	# 野蛮生长
			add_deposit = d_former_countries_controlled	# 分裂各国控制区
			add_building = building_ark_energy_well1
			add_deposit = d_ark_aegir_generator
			remove_building = building_fortress
			#add_building = building_bureaucratic_1
			#add_building = building_commercial_zone
			#if = {
			#	limit = {
			#		root = {
			#			OR = {
			#				has_ethic = ethic_spiritualist
			#				has_ethic = ethic_fanatic_spiritualist
			#			}
			#		}
			#	}
			#	add_building = building_temple
			#}
			#remove_building = building_research_lab_1
		}
		every_owned_leader = {
			random_list ={
				1 = {add_experience = 1600}
				3 = {add_experience = 1300}
				4 = {add_experience = 1000}
				5 = {add_experience = 800}
			}
		}
		ruler = {
			add_trait_no_notify = leader_trait_meet_at_the_end
			add_trait_no_notify = leader_trait_legendary_great_teacher
			set_leader_flag = leader_death_events_blocked
			set_leader_flag = immune_to_negative_traits
			save_global_event_target_as = ark_ruler_doctor
		}
		add_modifier = { modifier = "terra_council" days = 120 }			# 联合会议准备中
		country_event = { id = ark_rhodes_island.1 }				# 创建罗德岛
		country_event = { #克丽丝滕
			id = ark_arclight.1
			days = 90
			random = 30
		}
		country_event = { #博士命定特质升级
			id = ark_game_start.101
			days = 7200
			random = 720
		}
		country_event = { #重置泰拉和塔卫二模型
			id = ark_game_start.10
			days = 2
		}
	}
}
 country_event = {
	 id = ark_game_start.10
	 hide_window = yes
	 is_triggered_only = yes
	 immediate = {
		 event_target:ark_planet_terra = {
			 set_planet_entity = {
				 entity = "continental_planet_terra_entity"
			 }
		 }
		 event_target:ark_planet_talos = {
			 set_planet_entity = {
				 entity = "ark_desert_planet_Talos_II"
			 }
		 }
	 }
 }

 country_event = {
	 id = ark_game_start.100
	 title = ark_game_start.100.title
	 desc =  ark_game_start.100.desc
	 is_triggered_only = yes
	 picture = GFX_evt_ark_explosive
	 option = {
		 name = ark_game_start.100.a
	 }
 }

country_event = { #选择海嗣特质
	id = ark_game_start.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_trait = trait_ARK_ocean_seaborn
	}

	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = scientist
			}
			remove_trait = leader_trait_seaborn_sci_simple_thoughts
			add_trait_no_notify = leader_trait_seaborn_sci_complex_thoughts
		}
		ruler = {
			add_trait_no_notify = leader_trait_Ishar_mla
			add_trait_no_notify = leader_trait_Ishar_mla02
			set_leader_flag = leader_death_events_blocked
			set_leader_flag = immune_to_negative_traits
		}
	}
}


#博士命定特质升级
country_event = {
	id = ark_game_start.101
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		has_origin = origin_ark_tragedy_birth
	}
	immediate = {
		event_target:ark_ruler_doctor = {
			set_leader_flag = doctor_upgrade_1
		}
		country_event = {
			id = ark_game_start.102
			days = 7200
			random = 180
		}
		create_message = {
			type = MESSAGE_ARK_TRAIT_UPGRADE
			localization =  MESSAGE_ARK_TRAIT_UPGRADE_DOCTOR_DESC
			days = @toast_message_days
		}
	}
}
country_event = {
	id = ark_game_start.102
	is_triggered_only = yes
	hide_window = yes
	trigger = {
	}
	immediate = {
		event_target:ark_ruler_doctor = {
			set_leader_flag = doctor_upgrade_2
		}	
		country_event = {
			id = ark_game_start.103
			days = 9600
			random = 360
		}
		create_message = {
			type = MESSAGE_ARK_TRAIT_UPGRADE
			localization =  MESSAGE_ARK_TRAIT_UPGRADE_DOCTOR_DESC
			days = @toast_message_days
		}
	}
}
country_event = {
	id = ark_game_start.103
	is_triggered_only = yes
	hide_window = yes
	trigger = {
	}
	immediate = {
		event_target:ark_ruler_doctor = {
			set_leader_flag = doctor_upgrade_3
		}	
		create_message = {
			type = MESSAGE_ARK_TRAIT_UPGRADE
			localization =  MESSAGE_ARK_TRAIT_UPGRADE_DOCTOR_DESC
			days = @toast_message_days
		}
	}
}

 country_event = { #选择源石病潜势
	 id = ark_game_start.11
	 hide_window = yes
	 is_triggered_only = yes

	 trigger = {
		 has_originium_traits = yes
	 }

	 immediate = {
		 capital_scope = {
			add_deposit = d_originiums_mine		# 源石开采区
			add_modifier = { modifier = nomadic_city days = -1 }		# 移动城邦
			add_modifier = { modifier = catastrophe days = -1 }			#天灾
			 save_event_target_as = ark_originium_mine_target
		 }
		 give_technology = { tech = tech_originiums_mining message = no }	# 初始科技
		 country_event = {
			 id = ark_game_start.12
			 days = 30
		 }
	 }
 }
 country_event = { #自检上述效果有没有被正确添加
	 id = ark_game_start.12
	 hide_window = yes
	 is_triggered_only = yes

	 trigger = {
		 has_originium_traits = yes
	 }

	 immediate = {
		 if = {
			 limit = {
				 event_target:ark_originium_mine_target = {
					 NOT = { has_deposit = d_originiums_mine }
			 	 }
			 }
			 event_target:ark_originium_mine_target = {
				 add_deposit = d_originiums_mine
			 }
		 }
		 if = {
			 limit = {
				 event_target:ark_originium_mine_target = {
					 NOT = { has_modifier = nomadic_city }
				 }
			 }
			 event_target:ark_originium_mine_target = {
				 add_modifier = { modifier = nomadic_city days = -1 }
			 }
		 }
		 if = {
			 limit = {
				 event_target:ark_originium_mine_target = {
					 NOT = { has_modifier = catastrophe }
				 }
			 }
			 event_target:ark_originium_mine_target = {
				 add_modifier = { modifier = catastrophe days = -1 }
			 }
		 }
		 if = {
			 limit = { NOT = { has_technology = tech_originiums_mining } }
			 give_technology = { tech = tech_originiums_mining message = no }
		 }
	 }
	 after = {
		 clear_global_event_target = ark_originium_mine_target
	 }
 }
# 与"Warship Girls R And MIST Species"联动
event = {
	id = ark_game_start.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = arknights_swimming }
	}

	immediate = {
		set_global_flag = arknights_swimming
	}
}